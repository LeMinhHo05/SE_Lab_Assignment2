using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Assignment2.DAL.Repositories
{
    public class UserRepository : IDisposable
    {
        // The DbContext generated by Entity Framework
        private SE_Assignment2_DBEntities context; // Adjust name if generated differently

        public UserRepository()
        {
            // Create a new context instance when the repository is created
            context = new SE_Assignment2_DBEntities(); // Adjust name if generated differently
            System.Diagnostics.Debug.WriteLine("UserRepository constructor called.");
        }

        // Method to get a user by username and password
        // NOTE: Password should be hashed in a real application!
        public virtual User GetUserByCredentials(string username, string password)
        {
            // Find the first user matching username and password (case-sensitive)
            // In a real app, compare hashed password instead of plain text
            return context.Users.FirstOrDefault(u => u.UserName == username && u.Password == password);
        }

        // Method to get a user by their ID
        public virtual User GetUserById(int userId)
        {
            return context.Users.Find(userId);
        }

        // Implement IDisposable to release the context resources
        private bool disposed = false;

        protected virtual void Dispose(bool disposing)
        {
            if (!this.disposed)
            {
                if (disposing)
                {
                    context.Dispose(); // Dispose the DbContext
                }
            }
            this.disposed = true;
        }

        public void Dispose()
        {
            Dispose(true);
            GC.SuppressFinalize(this);
        }
    }
}
